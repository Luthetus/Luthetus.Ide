@using Luthetus.Common.RazorLib.Keyboards.Models;
@using Luthetus.TextEditor.RazorLib.Keymaps.Models.Vims;
@using Luthetus.TextEditor.RazorLib.Rows.Models;
@using Luthetus.TextEditor.RazorLib.TextEditors.Models;
@using Luthetus.TextEditor.RazorLib.TextEditors.Models.TextEditorModels;
@using Luthetus.TextEditor.RazorLib.Htmls.Models;
@using System.Text;
@using Luthetus.TextEditor.RazorLib.TextEditors.Models.TextEditorModels.Internals;

<div class="luth_te_text-editor-footer @TextEditorService.ThemeCssClassString">
    <div class="luth_te_text-editor-footer-listing">
        @{
            var model = RenderBatch.Model;
            var viewModel = RenderBatch.ViewModel;
            var options = RenderBatch.Options;

            if (model is not null && viewModel is not null)
            {
                if (options is not null && options.Keymap is TextEditorKeymapVim keymapVim)
                {
                    var activeVimMode = keymapVim.ActiveVimMode;
                    var pendingSentenceList = keymapVim.VimSentence.PendingSentenceList;
                    var mostRecentSyntacticallyCompleteSentence = keymapVim.VimSentence.MostRecentSyntacticallyCompleteSentence;

                    var sentenceToDisplay = pendingSentenceList.Length == 0
                        ? mostRecentSyntacticallyCompleteSentence
                        : pendingSentenceList;

                    <div class="luth_te_text-editor-footer-entry">
                        <div class="luth_te_text-editor-footer-name-value-pair">
                            <div class="luth_te_text-editor-footer-name">
                                Vim:
                            </div>
                            <div class="luth_te_text-editor-footer-value" title="Mode: @activeVimMode">
                                @activeVimMode,&nbsp;
                            </div>
                        </div>

                        <div class="luth_te_text-editor-footer-name-value-pair">
                            <div class="luth_te_text-editor-footer-value">
                                @{
                                    var sentenceBuilder = new StringBuilder();

                                    foreach (var vimToken in sentenceToDisplay)
                                    {
                                        sentenceBuilder.Append(KeyboardKeyFacts.ConvertCodeToKey(
                                            vimToken.KeymapArgument.Code));
                                    }

                                    var minAndMaxCharacters = 4;
                                    for (int i = minAndMaxCharacters - sentenceBuilder.Length; i > 0; i--)
                                    {
                                        sentenceBuilder.Append(' ');
                                    }

                                    var sentence = sentenceBuilder.ToString();

                                    if (sentence.Length > minAndMaxCharacters)
                                    {
                                        var elipsisString = "...";

                                        sentence = sentence[..(minAndMaxCharacters - elipsisString.Length)];
                                        sentence += elipsisString;
                                    }

                                    sentence = sentence.EscapeHtml();
                                }

                                @((MarkupString)('{' + sentence + '}'))
                            </div>
                        </div>
                    </div>
                }

                if (!string.IsNullOrWhiteSpace(model.FileExtension))
                {
                    <div class="luth_te_text-editor-footer-entry">
                        @model.FileExtension
                    </div>
                }

                <div class="luth_te_text-editor-footer-entry">
                    <div class="luth_te_text-editor-footer-name-value-pair">
                        <div class="luth_te_text-editor-footer-name">
                            length:
                        </div>
                        <div class="luth_te_text-editor-footer-value"
                             style="@StyleMinWidthFromMaxLengthOfValue(model.Content.DocumentLength)">
                            @($"{model.Content.DocumentLength}")
                        </div>
                    </div>

                    <div class="luth_te_text-editor-footer-name-value-pair">
                        <div class="luth_te_text-editor-footer-name">
                            lines:
                        </div>
                        <div class="luth_te_text-editor-footer-value"
                             style="@StyleMinWidthFromMaxLengthOfValue(model.Content.RowCount)">
                            @($"{model.Content.RowCount}")
                        </div>
                    </div>
                </div>

                <div class="luth_te_text-editor-footer-entry">
                    <div class="luth_te_text-editor-footer-name-value-pair">
                        <div class="luth_te_text-editor-footer-name">
                            Ln:
                        </div>

                        @{
                            var rowNumber = viewModel.PrimaryCursor.RowIndex + 1;
                        }

                        <div class="luth_te_text-editor-footer-value"
                             style="@StyleMinWidthFromMaxLengthOfValue(model.RowCount)">
                            @($"{rowNumber}")
                        </div>
                    </div>

                    <div class="luth_te_text-editor-footer-name-value-pair">
                        <div class="luth_te_text-editor-footer-name">
                            Col:
                        </div>

                        @{
                            var columnNumber = viewModel.PrimaryCursor.ColumnIndex + 1;
                        }

                        <div class="luth_te_text-editor-footer-value"
                             style="@StyleMinWidthFromMaxLengthOfValue(model.MostCharactersOnASingleRowTuple.rowLength)">
                            @($"{columnNumber}")
                        </div>
                    </div>

                    <div class="luth_te_text-editor-footer-name-value-pair">
                        <div class="luth_te_text-editor-footer-name">
                            Pos:
                        </div>

                        @{
                            var positionNumber = model.GetPositionIndex(viewModel.PrimaryCursor) + 1;
                        }

                        <div class="luth_te_text-editor-footer-value"
                             style="@StyleMinWidthFromMaxLengthOfValue(model.DocumentLength)">
                            @($"{positionNumber}")
                        </div>
                    </div>
                </div>

                <div class="luth_te_text-editor-footer-entry">
                    @if (model.OnlyRowEndingKind is null)
                    {
                        <text>has:mixed </text>
                    }
                    else
                    {
                        <text>has:@model.OnlyRowEndingKind.Value.AsFriendlyName() </text>
                    }

                    use:
                    <select @onchange="SelectRowEndingKindOnChange">
                        @foreach (var rowEndingKind in RowEndingKind.Linefeed.GetRowEndingsUserAllowedToUse())
                        {
                            <option value="@rowEndingKind.ToString()"
                                    selected="@(model.UsingRowEndingKind == rowEndingKind)">
                                @rowEndingKind.AsFriendlyName()
                            </option>
                        }
                    </select>
                </div>
            }
            else
            {
                <div class="luth_te_text-editor-footer-entry luth_te_text-editor-footer-file-sizing">
                    @if (model is null)
                    {
                        <div>The @nameof(TextEditorModel) was null</div>
                    }
                    else if (viewModel is not null)
                    {
                        <div>The @nameof(TextEditorViewModel) was null</div>
                    }
                </div>
            }
        }
    </div>
</div>