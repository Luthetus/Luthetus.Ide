@using Luthetus.Common.RazorLib.Icons.Models
@using Luthetus.Common.RazorLib.FileSystems.Models
@using Luthetus.TextEditor.RazorLib.TextEditors.Models
@using Luthetus.Ide.RazorLib.FileSystems.Models

@code {
	public static RenderFragment<(IconDriver IconDriver, IAbsolutePath AbsolutePath)> GetRenderFragment = tuple => 
	@<span class="luth_ide_solution-explorer-icon-display">
    @if (tuple.AbsolutePath.IsDirectory)
    {
        if (tuple.AbsolutePath.NameNoExtension == UniqueFileFacts.Properties)
        {
            <IconProperties/>
        }
        else if (tuple.AbsolutePath.NameNoExtension == UniqueFileFacts.WwwRoot)
        {
            <IconWwwRoot/>
        }
        else
        {
        	@IconFolder.GetRenderFragment(tuple.IconDriver)
        }
    }
    else
    {
        switch (tuple.AbsolutePath.ExtensionNoPeriod)
        {
            case ExtensionNoPeriodFacts.DOT_NET_SOLUTION:
                <IconDotNetSolution/>
                break;
            case ExtensionNoPeriodFacts.C_SHARP_PROJECT:
                <IconCSharpProject/>
                break;
            case ExtensionNoPeriodFacts.C_SHARP_CLASS:
            case ExtensionNoPeriodFacts.RAZOR_CODEBEHIND:
                <IconCSharpClass/>
                break;
            case ExtensionNoPeriodFacts.CSHTML_CLASS:
                <IconCshtml/>
                break;
            case ExtensionNoPeriodFacts.RAZOR_MARKUP:
                <IconRazor/>
                break;
            case ExtensionNoPeriodFacts.JSON:
                <IconJson/>
                break;
            case ExtensionNoPeriodFacts.CSS:
                <IconCss/>
                break;
            case ExtensionNoPeriodFacts.JAVA_SCRIPT:
                <IconJs/>
                break;
            case ExtensionNoPeriodFacts.TYPE_SCRIPT:
                <IconTs/>
                break;
            default:
                <IconFile/>
                break;
        }
    }
</span>;
}