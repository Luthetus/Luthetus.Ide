@{
    var countShown = BackgroundTaskDialogModel.CountTracked;
    var seenBackgroundTasks = BackgroundTaskDialogModel.SeenBackgroundTasks.TakeLast(countShown).Reverse().ToArray();
}

<div class="luth_ide_background-task">
    <div>only showing the most recent @countShown</div>
    <div>The most recent entry is the first entry rendered, the last entry is the oldest entry relative to the set which was rendered.</div>
    
    <hr />
    @BackgroundTaskDialogModel.SeenBackgroundTasks.Count
    <div>
        @for (var i = 0; i < seenBackgroundTasks.Length; i++)
        {
            var index = i;
            var backgroundTask = seenBackgroundTasks[index];

            if (backgroundTask.Name.StartsWith("te_"))
            {
                <div class="luth_te_keyword" style="padding-top: 8px; padding-bottom: 4px; border-bottom: 1px solid var(--luth_primary-border-color);" title="@backgroundTask.BackgroundTaskKey.Guid">
                    @backgroundTask.Name
                </div>
            }
            else
            {
                <div style="padding-top: 8px; padding-bottom: 4px; border-bottom: 1px solid var(--luth_primary-border-color);" title="@backgroundTask.BackgroundTaskKey.Guid">
                    @backgroundTask.Name
                </div>
            }
        }
    </div>
</div>
