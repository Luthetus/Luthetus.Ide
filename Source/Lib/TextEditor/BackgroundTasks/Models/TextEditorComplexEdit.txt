public class TextEditorComplexWork
{
	TextEditorPrimitiveWorkKind PrimitiveWorkKind => TextEditorPrimitiveWorkKind.None;
}

public interface ITextEditorPrimitiveWork
{
	TextEditorPrimitiveWorkKind PrimitiveWorkKind { get; }
}

public struct TextEditorPrimitiveWorkInsertion : ITextEditorPrimitiveWork
{
	TextEditorPrimitiveWorkKind PrimitiveWorkKind => TextEditorPrimitiveWorkKind.Insertion;

	/// <summary>
	/// Track where the content should be inserted.
	/// </summary>
	Key<TextEditorCursor> CursorKey;
	
	/// <summary>
	/// The content to insert.
	/// </summary>
	StringBuilder Content;
}

public struct TextEditorPrimitiveWorkDeletion : ITextEditorPrimitiveWork
{
	TextEditorPrimitiveWorkKind PrimitiveWorkKind => TextEditorPrimitiveWorkKind.Deletion;

	/// <summary>
	/// Track where the deletion should start.
	/// </summary>
	Key<TextEditorCursor> CursorKey;

	/// <summary>
	/// How many user-characters should be deleted from the starting position.
	/// For example: "\r\n" is 1 user-character, but 2 chars.
	/// </summary>
	int Count;
}

public struct TextEditorPrimitiveWorkOther
{
	TextEditorPrimitiveWorkKind PrimitiveWorkKind => TextEditorPrimitiveWorkKind.Other;
}

public enum TextEditorPrimitiveWorkKind
{
	Insertion,
	Deletion,
	None,
}

Keyboard events: { KeyA, KeyB, KeyC } =>

Queue:
[
	BackgroundTask(KeyboardEvent:KeyA),
	BackgroundTask(KeyboardEvent:KeyB),
	BackgroundTask(KeyboardEvent:KeyC),
] => rewritten as

Queue:
[
	KeyA { PrimitiveInsertion(primaryCursor, "a") },
	KeyB { PrimitiveInsertion(primaryCursor, "b") },
	KeyC { PrimitiveInsertion(primaryCursor, "c") },
] => rewritten as

Queue:
[
	PrimitiveInsertion(primaryCursor, "a"),
	PrimitiveInsertion(primaryCursor, "b"),
	PrimitiveInsertion(primaryCursor, "c"),
] => rewritten as

Queue:
[
	PrimitiveInsertion(primaryCursor, "abc"),
];

BackgroundTaskService ==========================
						                        | // Take the zero index item
[                                               |
	PrimitiveInsertion(primaryCursor, "abc"), ==
];

BackgroundTaskService(PrimitiveInsertion(primaryCursor, "abc"))

TextEditor.ReRender();