@using Luthetus.TextEditor.RazorLib.TextEditors.Models;

@{ var renderBatchLocal = RenderBatch; }

@if (renderBatchLocal is not null)
{
	<div class="luth_te_widget-layer">
		@{
			var blockWidth = GetBlockWidth(renderBatchLocal);
			
			// https://learn.microsoft.com/en-us/aspnet/core/blazor/performance?view=aspnetcore-8.0&preserve-view=true
			// TODO: Add an @key="..."?
		    RenderFragment<WidgetBlock> WidgetBlockDisplay = widget =>
		        @<div class="luth_te_widget luth_set-selectable"
					  style="@blockWidth @GetBlockCssStyle(renderBatchLocal, widget.LineIndex)"
					  @onclick:stopPropagation="true"
					  @onkeydown:stopPropagation="true"
					  @oncontextmenu:stopPropagation="true"
					  @onmousedown:stopPropagation="true"
					  @onmousemove:stopPropagation="true"
					  @onmouseout:stopPropagation="true"
					  @ondblclick:stopPropagation="true"
					  @onwheel:stopPropagation="true"
					  @ontouchstart:stopPropagation="true"
					  @ontouchmove:stopPropagation="true"
					  @ontouchend:stopPropagation="true"
					  @ontouchcancel:stopPropagation="true"
					  @ontouchleave:stopPropagation="true">
					  
					<div class="luth_te_widget-toolbar">
						<div class="luth_te_widget-toolbar-left">
							@widget.Title
						</div>
						<div class="luth_te_widget-toolbar-right">
							<button class="luth_button"
				                    @onclick="() => CloseWidgetOnClick(renderBatchLocal, widget)">
				                @{
				                	var appOptionsState = AppOptionsService.GetAppOptionsState();
				                
				                	var iconDriver = new IconDriver(
					            		appOptionsState.Options.IconSizeInPixels,
					            		appOptionsState.Options.IconSizeInPixels);
				                }
				                @IconCloseFragment.Render(iconDriver)
				            </button>
						</div>
					</div>
					
					<div class="luth_te_widget-body">
						<DynamicComponent Type="widget.ComponentType"
					                      Parameters="widget.ComponentParameterMap" />
					</div>
				</div>;
		}
		
		@* 
			TODO: If we make the div with class 'luth_te_widget' into...
				  ...a component, it would add overhead.
				  |
				  Its desired to make it into a component,
				  but bad-"early optimization" anxiety is rampant at the moment.
				  |
				  If this is made into a component it would D.R.Y. the
				  stopPropagation logic.
		*@
		
		<div class="luth_te_widget-block-layer">
		    @foreach (var widget in renderBatchLocal.ViewModel.WidgetBlockList)
		    {
		    	@WidgetBlockDisplay(widget)
		    }
		</div>
		
		<div class="luth_te_widget-inline-layer">
		    @foreach (var widget in renderBatchLocal.ViewModel.WidgetInlineList)
		    {
		        <div class="luth_te_widget luth_set-selectable"
					 @onclick:stopPropagation="true"
					 @onkeydown:stopPropagation="true"
					 @oncontextmenu:stopPropagation="true"
					 @onmousedown:stopPropagation="true"
					 @onmousemove:stopPropagation="true"
					 @onmouseout:stopPropagation="true"
					 @ondblclick:stopPropagation="true"
					 @onwheel:stopPropagation="true"
					 @ontouchstart:stopPropagation="true"
					 @ontouchmove:stopPropagation="true"
					 @ontouchend:stopPropagation="true"
					 @ontouchcancel:stopPropagation="true"
					 @ontouchleave:stopPropagation="true">
					 
				    <DynamicComponent Type="widget.ComponentType"
				                      Parameters="widget.ComponentParameterMap" />
				</div>
		    }
		</div>
		
		<div class="luth_te_widget-overlay-layer">
		    @foreach (var widget in renderBatchLocal.ViewModel.WidgetOverlayList)
		    {
		        <div class="luth_te_widget luth_set-selectable"
					 @onclick:stopPropagation="true"
					 @onkeydown:stopPropagation="true"
					 @oncontextmenu:stopPropagation="true"
					 @onmousedown:stopPropagation="true"
					 @onmousemove:stopPropagation="true"
					 @onmouseout:stopPropagation="true"
					 @ondblclick:stopPropagation="true"
					 @onwheel:stopPropagation="true"
					 @ontouchstart:stopPropagation="true"
					 @ontouchmove:stopPropagation="true"
					 @ontouchend:stopPropagation="true"
					 @ontouchcancel:stopPropagation="true"
					 @ontouchleave:stopPropagation="true">
					 
				    <DynamicComponent Type="widget.ComponentType"
				                      Parameters="widget.ComponentParameterMap" />
				</div>
		    }
		</div>
	</div>
}
