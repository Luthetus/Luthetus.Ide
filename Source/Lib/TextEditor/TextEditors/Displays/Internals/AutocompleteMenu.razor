@using Luthetus.Common.RazorLib.Menus.Displays
@using Luthetus.TextEditor.RazorLib.Autocompletes.Models;

@{ var renderBatchLocal = RenderBatch; }

@if (renderBatchLocal is not null)
{
	<div @ref="_autocompleteMenuElementReference"
	     tab-index="-1"
	     class="luth_ide_text-editor-autocomplete-menu"
	     @onkeydown="HandleOnKeyDown">
	    
	    <CascadingValue Name="ReturnFocusToParentFuncAsync"
	                    Value="ReturnFocusToThisAsync">
	        
	        <MenuDisplay @ref="_autocompleteMenuComponent" 
	                     MenuRecord="GetMenuRecord()"
	                     FocusOnAfterRenderAsync="false"
	                     Context="menuOption">
	
	            <IconRenderFragment>
	                @{
	                    if ((menuOption.WidgetParameterMap?.TryGetValue(
	                            nameof(AutocompleteEntry), out var value) ?? false) &&
	                        value is AutocompleteEntry autocompleteEntry)
	                    {
	                        switch (autocompleteEntry.AutocompleteEntryKind)
	                        {
	                            case AutocompleteEntryKind.Word:
	                                <IconSymbolKey/>
	                                break;
	                            case AutocompleteEntryKind.Variable:
	                                <IconSymbolField/>
	                                break;
	                            case AutocompleteEntryKind.Function:
	                                <IconSymbolMethod/>
	                                break;
	                            case AutocompleteEntryKind.Type:
	                                <IconSymbolClass/>
	                                break;
	                        }
	                    }
	                }
	            </IconRenderFragment>
	        </MenuDisplay>
	    </CascadingValue>
	
	</div>
}
