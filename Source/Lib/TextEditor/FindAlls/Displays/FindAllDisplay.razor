@using Fluxor.Blazor.Web.Components;
@using Luthetus.Common.RazorLib.Keys.Models;
@using Luthetus.Common.RazorLib.Tabs.Displays
@using Luthetus.Common.RazorLib.Reactives.Displays
@using Luthetus.Common.RazorLib.TreeViews.Displays
@using Luthetus.TextEditor.RazorLib.FindAlls.Models;
@using Luthetus.TextEditor.RazorLib.FindAlls.States;

@inherits FluxorComponent

@{
    var findAllState = TextEditorFindAllStateWrap.Value;
    var appOptionsState = AppOptionsService.GetAppOptionsState();
}

<div class="luth_te_find-all">
    <div class="luth_te_find-all-body">

		<div class="luth_te_find-all-search-query">
			SearchQuery:&nbsp;
			<input class="luth_ide_input luth_ide_input-text"
				   style="width: 100%;"
				   placeholder="@nameof(SearchQuery)"
				   @bind="SearchQuery"
				   @bind:event="oninput" />
		</div>

		<div class="luth_te_find-all-starting-directory-path">
			StartingDirectoryPath:&nbsp;
			<input class="luth_ide_input luth_ide_input-text"
				   style="width: 100%;"
				   placeholder="@nameof(StartingDirectoryPath)"
				   @bind="StartingDirectoryPath"
				   @bind:event="oninput" />
		</div>

		@if (findAllState.ProgressBarModel is null || findAllState.ProgressBarModel.IsDisposed)
		{
			<button class="luth_button"
	                @onclick="DoSearchOnClick">
	            Find All
	        </button>
	        
	        <div>Not Searching</div>
	        
	        if (findAllState.ProgressBarModel is not null)
	        {
	        	<ProgressBarDisplay ProgressBarModel="findAllState.ProgressBarModel"/>
	        }
		}
		else
		{
			<button class="luth_button"
	                @onclick="CancelSearchOnClick">
	            Cancel
	        </button>
	        
	        <ProgressBarDisplay ProgressBarModel="findAllState.ProgressBarModel"/>
		}
		
		<div>Results: @($"{findAllState.SearchResultList.Count:N0}")</div>
	
		<div class="luth_te_search-engine-file-system-results">
			<CascadingValue Name="LuthetusTreeViewIconWidth" Value="appOptionsState.Options.IconSizeInPixels">
                <CascadingValue Name="LuthetusTreeViewIconHeight" Value="appOptionsState.Options.IconSizeInPixels">
                    <CascadingValue Name="OffsetPerDepthInPixels" Value="OffsetPerDepthInPixels">
                        <TreeViewContainerDisplay TreeViewContainerKey="TextEditorFindAllState.TreeViewFindAllContainerKey"
                                                  CssStyleString="height: 100%;"
                                                  OnContextMenuFunc="OnTreeViewContextMenuFunc"
                                                  TreeViewKeyboardEventHandler="_treeViewKeymap"
                                                  TreeViewMouseEventHandler="_treeViewMouseEventHandler" />
                    </CascadingValue>
                </CascadingValue>
            </CascadingValue>
		</div>
    </div>
</div>