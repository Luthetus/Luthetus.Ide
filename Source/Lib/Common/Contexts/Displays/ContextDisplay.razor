@using Luthetus.Common.RazorLib.Keymaps.Displays
@using Luthetus.Common.RazorLib.Contexts.Models

<div class="luth_ide_active-context-entry">

    @{
    	var contextRecord = ContextService.GetContextRecord(ContextKey);
    	var appOptionsState = AppOptionsService.GetAppOptionsState();
    }

    <div class="luth_ide_active-context-title">
        <button class="luth_button"
                style="display: inline;"
                @onclick="() => _isExpanded = !_isExpanded">
                
            @{
            	var iconDriver = new IconDriver(
					appOptionsState.Options.IconSizeInPixels,
					appOptionsState.Options.IconSizeInPixels);
            }
        
            @if (_isExpanded)
            {
                @IconChevronDownFragment.Render(iconDriver)
            }
            else
            {
                @IconChevronRightFragment.Render(iconDriver)
            }
        </button>

        <em class="luth_em">
            @if (contextRecord != default(ContextRecord))
            {
                @: @contextRecord.DisplayNameFriendly
                
            }
            else
            {
                @: ContextRecord was null
            }
        </em>
    </div>

    <div class="luth_ide_active-context-body">
        @if (_isExpanded && contextRecord != default(ContextRecord))
        {
            <KeymapDisplay Keymap="contextRecord.Keymap" />
        }
    </div>
</div>
