<div class="luth_notification @(Notification.NotificationCssClass ?? string.Empty)"
     style="@CssStyleString"
     @onfocusin="HandleOnFocusIn"
     @onfocusin:stopPropagation="true"
     @onfocusout="HandleOnFocusOut"
     @onfocusout:stopPropagation="true">
     
    <div class="luth_notification-toolbar">
        <div class="luth_notification-title luth_unselectable"
             style="@NotificationTitleCssStyleString"
             title="@Notification.Title">
            @Notification.Title
        </div>

        <div class="luth_notification-control-buttons">
        
        	@{
        		var appOptionsState = AppOptionsService.GetAppOptionsState();
        	
				var iconDriver = new IconDriver(
					appOptionsState.Options.IconSizeInPixels,
					appOptionsState.Options.IconSizeInPixels);
			}
			
            <button class="luth_button luth_notification-button-entry"
            		@onclick="ChangeNotificationToDialog">
                @IconEmptyWindowFragment.Render(iconDriver)
            </button>
            <button class="luth_button luth_notification-button-entry"
            		@onclick="() => HandleShouldNoLongerRender(wasCausedByUiEvent: true)">
                @IconCloseFragment.Render(iconDriver)
            </button>
        </div>
    </div>

    <div class="luth_notification-body">
        <CascadingValue Value="Notification">
            <DynamicComponent Type="Notification.ComponentType"
                              Parameters="Notification.ComponentParameterMap"/>
        </CascadingValue>
    </div>
</div>