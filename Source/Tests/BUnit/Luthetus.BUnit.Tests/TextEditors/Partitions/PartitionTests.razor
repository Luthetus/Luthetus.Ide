@using Fluxor
@using Luthetus.Common.RazorLib.Installations.Models
@using Luthetus.Common.RazorLib.BackgroundTasks.Models
@using Luthetus.Common.RazorLib.Dialogs.Models
@using Luthetus.Common.RazorLib.Dialogs.Displays
@using Luthetus.Common.RazorLib.Dynamics.Models
@using Luthetus.Common.RazorLib.Keys.Models
@using Luthetus.Common.RazorLib.Notifications.Displays
@using Luthetus.Common.RazorLib.Notifications.Models
@using Luthetus.Common.RazorLib.Keymaps.Models
@using Luthetus.TextEditor.RazorLib
@using Luthetus.TextEditor.RazorLib.Events.Models
@using Luthetus.TextEditor.RazorLib.Installations.Models
@using Luthetus.TextEditor.RazorLib.TextEditors.Models
@using Luthetus.TextEditor.RazorLib.Lexers.Models
@using Luthetus.TextEditor.RazorLib.TextEditors.Displays
@using Luthetus.Ide.RazorLib.Installations.Models

@inherits EditLogicTestBase
@code
{
	/// <summary>
	/// When a deletion of text spans multiple partitions it seems to sometimes break the line endings.
	/// </summary>
	[Fact]
    public async Task HandleEvent_Result()
    {
		var testData = EditLogicTestsInitialize(string.Empty);

		var onKeyDown = new OnKeyDownLateBatching(
	        testData.ComponentData,
	        new KeymapArgs { Key = "a", Code = "KeyA" },
	        testData.InModel.ResourceUri,
	        testData.ViewModelKey);
  
		// Assert that 'AllText' changes, since this event should write text.
		Assert.Equal(string.Empty, testData.InModel.AllText);

		testData.TextEditorService.Post(onKeyDown);
        
		var backgroundTasksHandle = SharedInitializationForTests.StartBackgroundTasks(this);
		await backgroundTasksHandle.Stop();
        
		var outModel = testData.TextEditorService.ModelApi.GetOrDefault(testData.InModel.ResourceUri);

		// Assert that 'AllText' changes, since this event should write text.
		Assert.Equal("a", outModel.AllText);
    }
}
